{"version":3,"sources":["dashboard/Dashboard.tsx","posts/PostFilter.tsx","posts/PostList.tsx","posts/PostShow.tsx","todos/TodoFilter.tsx","todos/useGetTotals.ts","todos/TodoList.tsx","users/fields/UserAddressField.tsx","users/fields/UserCompanyField.tsx","components/Map.tsx","users/fields/UserMapField.tsx","users/fields/UserWebsiteField.tsx","users/UserExpand.tsx","users/UserFilter.tsx","users/UserList.tsx","users/UserShow.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Dashboard","Card","title","CardContent","Typography","variant","PostFilter","props","Filter","TextInput","label","source","alwaysOn","ReferenceInput","reference","allowEmpty","AutocompleteInput","optionText","defaultProps","children","PostList","filters","bulkActionButtons","Datagrid","rowClick","TextField","ReferenceField","link","Title","record","id","Actions","basePath","data","resource","TopToolbar","Link","href","userId","PostShow","Show","actions","SimpleShowLayout","FunctionField","render","username","name","RichTextField","TodoFilter","useGetTotals","filterValues","Completed","useGetList","perPage","page","field","order","completed","total","NotCompleted","TabbedDatagrid","useState","completedIds","setCompletedIds","notCompletedIds","setNotCompletedIds","listContext","useListContext","ids","setFilters","displayedFilters","isCompleted","undefined","useEffect","totals","tabValue","selectedIds","Tabs","value","onChange","event","map","status","Tab","Divider","TabPanel","values","Box","p","ListContextProvider","optimized","BooleanField","TodoList","UserAddressField","address","useRecordContext","street","suite","city","zipcode","addLabel","UserCompanyField","company","catchPhrase","bs","Map","center","markerPosition","zoom","isScroll","style","width","height","markerMessage","MapContainer","scrollWheelZoom","TileLayer","attribution","url","Marker","position","Popup","UserMapField","lat","Number","geo","lng","useStyles","makeStyles","textDecoration","icon","paddingLeft","UserWebsiteField","classes","website","target","rel","className","root","margin","UserExpand","controllerProps","useShowController","TabbedShowLayout","syncWithLocation","ReferenceManyField","UserFilter","UserList","sort","expand","EmailField","UserShow","App","jsonServerProvider","dataProvider","Admin","dashboard","Resource","list","PeopleIcon","show","options","MessageIcon","ListIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f679a03e.chunk.js","sourcesContent":["import Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { Title } from 'react-admin';\n\nconst Dashboard = () => (\n  <Card>\n    <Title title=\"Home Title\" />\n    <CardContent>\n      <Typography variant=\"h6\">Home Message</Typography>\n    </CardContent>\n  </Card>\n)\n\nexport default Dashboard;\n","import React from 'react'\nimport { AutocompleteInput, Filter, FilterProps, ReferenceInput, TextInput } from 'react-admin'\n\nconst PostFilter = (props: FilterProps) => (\n  <Filter {...props}>\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\n    <ReferenceInput label=\"Username\" source=\"userId\" reference=\"users\" allowEmpty>\n      <AutocompleteInput optionText=\"username\" />\n    </ReferenceInput>\n  </Filter>\n)\n\nPostFilter.defaultProps = {\n  children: []\n}\n\nexport default PostFilter\n","import { ListProps } from \"ra-ui-materialui\";\nimport React from \"react\";\nimport { Datagrid, List, ReferenceField, TextField } from \"react-admin\";\nimport PostFilter from \"./PostFilter\";\n\nconst PostList = (props: ListProps) => (\n  <List {...props}\n    filters={<PostFilter />}\n    bulkActionButtons={false}>\n\n    <Datagrid rowClick=\"show\">\n      <TextField source=\"id\" />\n      <ReferenceField source=\"userId\" reference=\"users\" link={false}>\n        <TextField source=\"name\" />\n      </ReferenceField>\n      <TextField source=\"title\" />\n      <TextField source=\"body\" />\n    </Datagrid>\n\n  </List>\n)\n\nexport default PostList\n","import Link from '@material-ui/core/Link';\nimport React from \"react\";\nimport { FunctionField, Record, ReferenceField, RichTextField, Show, ShowActionsProps, ShowProps, SimpleShowLayout, TextField, TitleProps, TopToolbar } from \"react-admin\";\n\nconst Title = ({ record }: TitleProps) => (\n  <span>\n    {record ? `Posts[${record.id}] \"${record.title}\"` : 'Posts not found'}\n  </span>\n)\n\nconst Actions = ({ basePath, data, resource }: ShowActionsProps) => (\n  <TopToolbar>\n    <Link href={`/#${basePath}?filter={\"userId\":${data?.userId}}`}>\n      <>Other Posts From Same User</>\n    </Link>\n  </TopToolbar>\n)\n\nconst PostShow = (props: ShowProps) => (\n  <Show title={<Title />} actions={<Actions />} {...props}>\n    <SimpleShowLayout>\n      <TextField source=\"id\" label=\"PostId\" />\n      <ReferenceField source=\"userId\" reference=\"users\" link=\"show\">\n        <FunctionField render={(record?: Record) => (\n          <>[{record?.id}] {record?.username} ({record?.name})</>\n        )} />\n      </ReferenceField>\n      <TextField source=\"title\" />\n      <RichTextField source=\"body\" />\n    </SimpleShowLayout>\n  </Show>\n)\n\nexport default PostShow\n","import React from \"react\"\nimport { AutocompleteInput, Filter, FilterProps, ReferenceInput, TextInput } from \"react-admin\"\n\nconst TodoFilter = (props: FilterProps) => (\n  <Filter {...props}>\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\n    <ReferenceInput label=\"Username\" source=\"userId\" reference=\"users\" allowEmpty>\n      <AutocompleteInput optionText=\"username\" />\n    </ReferenceInput>\n  </Filter>\n)\n\nTodoFilter.defaultProps = {\n  children: []\n}\n\nexport default TodoFilter\n","import { useGetList } from \"react-admin\"\n\ntype Totals = { [key: string]: number }\n\nconst useGetTotals = (filterValues: any): Totals => {\n  const { total: totalCompleted } = useGetList(\n    'todos',\n    { perPage: 1, page: 1 },\n    { field: 'id', order: 'ASC' },\n    { ...filterValues, completed: true }\n  )\n  const { total: totalNotCompleted } = useGetList(\n    'todos',\n    { perPage: 1, page: 1 },\n    { field: 'id', order: 'ASC' },\n    { ...filterValues, completed: false }\n  )\n\n  return {\n    Completed: totalCompleted || 0,\n    NotCompleted: totalNotCompleted || 0,\n  }\n}\n\nexport default useGetTotals\n","import Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { BooleanField, Datagrid, Identifier, List, ListContextProvider, ListProps, ReferenceField, TextField, useListContext } from \"react-admin\";\nimport TodoFilter from \"./TodoFilter\";\nimport useGetTotals from './useGetTotals';\n\n// Material UI Tabs\n// https://material-ui.com/components/tabs/\n\n// Tabbed Datagrid\n// https://github.com/marmelab/react-admin/blob/a7cf0bed93526f6ccb82a6adb351ef8e25b004fb/examples/demo/src/orders/OrderList.tsx\n// https://marmelab.com/blog/2018/08/16/react-admin-2-2.html#code-classlanguage-textltlistgtcode-passes-the-same-props-to-all-its-children\n// https://github.com/marmelab/react-admin/blob/496fb2ce242bc5be7e30f2ff1657357da14eb74d/examples/demo/src/commands/CommandList.js#L55-L173\n\nconst TodoList = (props: ListProps) => (\n  <List {...props} filters={<TodoFilter />} bulkActionButtons={false}>\n    <TabbedDatagrid />\n  </List>\n)\n\nconst TabbedDatagrid = () => {\n  const [completedIds, setCompletedIds] = useState<Identifier[]>([] as Identifier[]);\n  const [notCompletedIds, setNotCompletedIds] = useState<Identifier[]>([] as Identifier[]);\n\n  const listContext = useListContext()\n  const { ids, filterValues, setFilters, displayedFilters } = listContext\n  // default value of completed is true\n  const isCompleted = filterValues.completed === undefined || filterValues.completed\n\n  useEffect(() => {\n    switch (isCompleted) {\n      case true:\n        setCompletedIds(ids)\n        break\n      case false:\n        setNotCompletedIds(ids)\n        break\n    }\n  }, [ids, isCompleted])\n\n  const handleChange = (event: ChangeEvent<{}>, value: string) => {\n    setFilters({ ...filterValues, completed: value === 'Completed' }, displayedFilters)\n  }\n\n  const totals = useGetTotals(filterValues)\n  const tabValue = isCompleted ? 'Completed' : 'NotCompleted'\n  const selectedIds = isCompleted ? completedIds : notCompletedIds\n\n  // c.f. https://material-ui.com/components/tabs/\n  return (\n    <>\n      <Tabs value={tabValue} onChange={handleChange}>\n        {['Completed', 'NotCompleted'].map(status => (\n          <Tab key={status} value={status} label={`${status} (${totals[status]})`} />\n        ))}\n      </Tabs>\n\n      <Divider />\n\n      <TabPanel selectedIds={selectedIds} />\n    </>\n  )\n}\n\nconst TabPanel = ({ selectedIds }: { selectedIds: Identifier[] }) => {\n  const listContext = useListContext()\n  const values = { filterValues: listContext.filterValues, ids: selectedIds }\n\n  return (\n    <Box p={3}>\n      <ListContextProvider value={{ ...listContext, ...values }}>\n        <Datagrid optimized>\n          <TextField source=\"id\" />\n          <ReferenceField source=\"userId\" reference=\"users\" link=\"show\">\n            <TextField source=\"username\" />\n          </ReferenceField>\n          <TextField source=\"title\" />\n          <BooleanField source=\"completed\" />\n        </Datagrid>\n      </ListContextProvider>\n    </Box>\n  )\n}\n\nexport default TodoList\n","import { useRecordContext } from \"react-admin\"\nimport { User } from \"../../Types\"\n\nexport const UserAddressField = () => {\n  const record = useRecordContext<User>()\n  const address = record.address\n\n  return (\n    <>{address.street}, {address.suite}, {address.city}, {address.zipcode}</>\n  )\n}\n\nUserAddressField.defaultProps = {\n  label: \"Address\",\n  addLabel: true,\n}\n","import { useRecordContext } from \"react-admin\"\nimport { User } from \"../../Types\"\n\nexport const UserCompanyField = () => {\n  const record = useRecordContext<User>()\n  const company = record.company\n\n  return (\n    <>{company.name} [{company.catchPhrase}] {company.bs}</>\n  )\n}\n\nUserCompanyField.defaultProps = {\n  label: \"Company\",\n  addLabel: true,\n}\n","import { LatLngTuple } from 'leaflet';\nimport { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet';\n\ntype Props = {\n  center: LatLngTuple;\n  markerPosition?: LatLngTuple;\n  zoom: number;\n  isScroll: boolean;\n  style: any;\n  markerMessage?: JSX.Element;\n}\n\nexport const Map = ({\n  center = [51.505, -0.09],\n  markerPosition = center,\n  zoom = 13,\n  isScroll = false,\n  style = { width: 300, height: 300 },\n  markerMessage,\n}: Partial<Props> = {}) => (\n  <MapContainer center={center} zoom={zoom} scrollWheelZoom={isScroll} style={style}>\n    <TileLayer\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    />\n    <Marker position={markerPosition}>\n      <Popup>{markerMessage || `[${markerPosition}]`}</Popup>\n    </Marker>\n  </MapContainer>\n)\n","import { useRecordContext } from \"react-admin\"\nimport { User } from \"../../Types\"\nimport { Map } from '../../components';\n\nexport const UserMapField = () => {\n  const record = useRecordContext<User>()\n\n  const lat = Number(record.address.geo.lat)\n  const lng = Number(record.address.geo.lng)\n\n  return (\n    <Map center={[lat, lng]} zoom={1} style={{ width: 300, height: 200 }} />\n  )\n}\n\nUserMapField.defaultProps = {\n  label: \"Map\",\n  addLabel: false,\n}\n","import Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport React from \"react\";\nimport { useRecordContext } from \"react-admin\";\nimport { User } from \"../../Types\";\n\nconst useStyles = makeStyles({\n  link: {\n    textDecoration: 'none',\n  },\n  icon: {\n    width: '0.5em',\n    height: '0.5em',\n    paddingLeft: 2,\n  },\n})\n\nexport const UserWebsiteField = () => {\n  const classes = useStyles()\n  const record = useRecordContext<User>()\n\n  return (\n    <Link href={`https://${record.website}`} target=\"_blank\" rel=\"noreferrer\" className={classes.link}>\n      {record.website}\n      <LaunchIcon className={classes.icon} />\n    </Link>\n  )\n}\n\nUserWebsiteField.defaultProps = {\n  label: \"Website\",\n  addLabel: true,\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { Datagrid, ReferenceManyField, Show, ShowProps, Tab, TabbedShowLayout, TextField, useShowController } from \"react-admin\";\nimport { User } from \"../Types\";\nimport { UserAddressField, UserCompanyField, UserMapField, UserWebsiteField } from './fields';\n\nconst useStyles = makeStyles({\n  root: { width: '80%', margin: 'auto' },\n})\n\nconst UserExpand = (props: ShowProps) => {\n  const classes = useStyles()\n  const controllerProps = useShowController<User>(props)\n  const { record } = controllerProps\n\n  if (record === undefined) return <></>\n\n  return (\n    <Show {...controllerProps} {...props}>\n      <TabbedShowLayout syncWithLocation={false} className={classes.root}>\n        <Tab label=\"Details\">\n          <UserAddressField />\n          <UserMapField />\n          <UserCompanyField />\n          <UserWebsiteField />\n        </Tab>\n        <Tab label=\"Posts\">\n          <ReferenceManyField reference=\"posts\" target=\"userId\" addLabel={false}>\n            <Datagrid rowClick=\"show\">\n              <TextField source=\"id\" />\n              <TextField source=\"title\" />\n              <TextField source=\"body\" />\n            </Datagrid>\n          </ReferenceManyField>\n        </Tab>\n      </TabbedShowLayout>\n    </Show>\n  )\n}\n\nexport default UserExpand\n","import React from 'react'\nimport { AutocompleteInput, Filter, FilterProps, ReferenceInput, TextInput } from 'react-admin'\n\nconst UserFilter = (props: FilterProps) => (\n  <Filter {...props}>\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\n    <ReferenceInput label=\"Username\" source=\"id\" reference=\"users\">\n      <AutocompleteInput optionText=\"username\" />\n    </ReferenceInput>\n  </Filter>\n)\n\nUserFilter.defaultProps = {\n  children: []\n}\n\nexport default UserFilter\n","import React from \"react\";\nimport { Datagrid, EmailField, List, ListProps, TextField } from \"react-admin\";\nimport { UserWebsiteField } from \"./fields\";\nimport UserExpand from \"./UserExpand\";\nimport UserFilter from \"./UserFilter\";\n\nconst UserList = (props: ListProps) => (\n  <List {...props}\n    title=\"List of Users\"\n    filters={<UserFilter />}\n    // default sort example\n    sort={{ field: 'username', order: 'asc' }}\n    // list level filter example\n    // filter={{ \"address.city\": \"McKenziehaven\" }}\n    bulkActionButtons={false}>\n\n    <Datagrid rowClick=\"expand\" expand={<UserExpand />}>\n      <TextField source=\"id\" />\n      <TextField source=\"username\" />\n      <TextField source=\"name\" />\n      <TextField source=\"address.city\" label=\"City\" />\n      <EmailField source=\"email\" />\n      <TextField source=\"phone\" />\n      <TextField source=\"company.name\" label=\"CompanyName\" />\n      <UserWebsiteField />\n    </Datagrid>\n\n  </List>\n)\n\nexport default UserList\n","import React from \"react\"\nimport { EmailField, Show, ShowProps, SimpleShowLayout, TextField } from \"react-admin\"\nimport { UserAddressField, UserCompanyField, UserMapField, UserWebsiteField } from \"./fields\"\n\nconst UserShow = (props: ShowProps) => (\n  <Show {...props}>\n    <SimpleShowLayout>\n      <TextField source=\"id\" />\n      <TextField source=\"username\" />\n      <TextField source=\"name\" />\n      <EmailField source=\"email\" />\n      <UserAddressField />\n      <UserMapField />\n      <TextField source=\"phone\" />\n      <UserWebsiteField />\n      <UserCompanyField />\n    </SimpleShowLayout>\n  </Show>\n)\n\nexport default UserShow\n","import ListIcon from '@material-ui/icons/List';\nimport MessageIcon from '@material-ui/icons/Message';\nimport PeopleIcon from '@material-ui/icons/People';\nimport jsonServerProvider from 'ra-data-json-server';\nimport React, { useState } from 'react';\nimport { Admin, DataProvider, Resource } from 'react-admin';\nimport Dashboard from './dashboard/Dashboard';\nimport PostList from './posts/PostList';\nimport PostShow from './posts/PostShow';\nimport TodoList from './todos/TodoList';\nimport UserList from './users/UserList';\nimport UserShow from './users/UserShow';\n\nfunction App() {\n  //https://jsonplaceholder.typicode.com/guide/\n  const [dataProvider] = useState<DataProvider>(\n    () => jsonServerProvider('https://jsonplaceholder.typicode.com')\n  )\n\n  // ListGuesser EditGuesser ShowGuesser are available\n  // Note: ShowGuesser need /show in the URL\n  // https://github.com/marmelab/react-admin/issues/4833\n  return (\n    <Admin dataProvider={dataProvider} dashboard={Dashboard}>\n      <Resource name=\"users\" list={UserList} icon={PeopleIcon} show={UserShow} options={{ label: 'User List' }} />\n      <Resource name=\"posts\" list={PostList} icon={MessageIcon} show={PostShow} />\n      <Resource name=\"todos\" list={TodoList} icon={ListIcon} />\n    </Admin>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}